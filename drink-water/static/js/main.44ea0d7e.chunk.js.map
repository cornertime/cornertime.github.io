{"version":3,"sources":["App.tsx","index.tsx"],"names":["secondsFrom","date","Date","getTime","App","React","useReducer","b","update","useState","target","setTarget","startTime","setStartTime","consumed","setConsumed","portion","setPortion","reset","useCallback","drink","changeTarget","event","value","parseInt","changePortion","useEffect","interval","setInterval","clearInterval","balance","Container","Jumbotron","className","toFixed","Form","Group","controlId","Label","Control","type","onChange","Button","block","size","variant","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MASA,SAASA,EAAYC,GAEnB,QADY,IAAIC,MACJC,UAAYF,EAAKE,WAAa,IA+D7BC,MA3Df,WAAgB,IAAD,EACMC,IAAMC,YAAW,SAAAC,GAAC,OAAKA,KAAG,GAApCC,EADI,sBAEeH,IAAMI,SAAS,KAF9B,mBAENC,EAFM,KAEEC,EAFF,OAGqBN,IAAMI,SAAe,IAAIP,MAH9C,mBAGNU,EAHM,KAGKC,EAHL,OAImBR,IAAMI,SAAS,GAJlC,mBAINK,EAJM,KAIIC,EAJJ,OAKiBV,IAAMI,SAAS,KALhC,mBAKNO,EALM,KAKGC,EALH,KAOPC,EAAQb,IAAMc,aAAY,WAC9BJ,EAAY,GACZF,EAAa,IAAIX,QAChB,IAEGkB,EAAQf,IAAMc,aAAY,WAE9BJ,EAAYD,EAAWE,KACtB,CAACF,EAAUE,IAERK,EAAehB,IAAMc,aAAY,SAACG,GACtC,IAAMC,EAAQC,SAASF,EAAMZ,OAAOa,OACpCZ,EAAUY,KACT,IAEGE,EAAgBpB,IAAMc,aAAY,SAACG,GACvC,IAAMC,EAAQC,SAASF,EAAMZ,OAAOa,OACpCN,EAAWM,KACV,IAEHlB,IAAMqB,WAAU,WACd,IAAMC,EAAWC,YAAYpB,EAAQ,KACrC,OAAO,kBAAMqB,cAAcF,OAG7B,IAAMG,EAAU9B,EAAYY,GAAa,KAASF,EAASI,EAE3D,OACE,cAACiB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAWC,UAAU,OAArB,UACE,oBAAIA,UAAU,OAAd,0BACA,+CAAiB,kCAAUjC,EAAYY,GAAa,MAAQsB,QAAQ,KAApE,YACA,4CAAc,iCAASpB,IAAvB,SACA,mDAAqB,iCAASgB,EAAQI,QAAQ,KAA9C,cACA,eAACC,EAAA,EAAD,CAAMF,UAAU,OAAhB,UACE,eAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,SAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,+CACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,SAASjB,MAAOb,EAAQ+B,SAAUpB,OAGvD,eAACc,EAAA,EAAKC,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,gCACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,SAASjB,MAAOP,EAASyB,SAAUhB,UAG1D,cAACiB,EAAA,EAAD,CAAQT,UAAU,OAAOU,OAAK,EAACC,KAAK,KAAKC,QAAQ,UAAUC,QAAS1B,EAApE,mBACA,cAACsB,EAAA,EAAD,CAAQT,UAAU,OAAOU,OAAK,EAACC,KAAK,KAAKC,QAAQ,YAAYC,QAAS5B,EAAtE,yB,MC9DR6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.44ea0d7e.chunk.js","sourcesContent":["import React from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\n\nimport Container from 'react-bootstrap/Container';\n\n\nfunction secondsFrom(date: Date) {\n  const now = new Date();\n  return (now.getTime() - date.getTime()) / 1000.0;\n}\n\n\nfunction App() {\n  const [, update] = React.useReducer(b => !b, false);\n  const [target, setTarget] = React.useState(750);\n  const [startTime, setStartTime] = React.useState<Date>(new Date());\n  const [consumed, setConsumed] = React.useState(0);\n  const [portion, setPortion] = React.useState(350)\n\n  const reset = React.useCallback(() => {\n    setConsumed(0);\n    setStartTime(new Date());\n  }, []);\n\n  const drink = React.useCallback(() => {\n    // TODO hardcoded\n    setConsumed(consumed + portion);\n  }, [consumed, portion]);\n\n  const changeTarget = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value);\n    setTarget(value);\n  }, [])\n\n  const changePortion = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(event.target.value);\n    setPortion(value);\n  }, [])\n\n  React.useEffect(() => {\n    const interval = setInterval(update, 1000);\n    return () => clearInterval(interval);\n  });\n\n  const balance = secondsFrom(startTime) / 3600.0 * target - consumed;\n\n  return (\n    <Container>\n      <Jumbotron className=\"mt-5\">\n        <h1 className=\"mb-4\">Drink water!</h1>\n        <h2>Time passed: <strong>{(secondsFrom(startTime) / 3600.0).toFixed(2)}</strong> hours</h2>\n        <h2>Consumed: <strong>{consumed}</strong> ml</h2>\n        <h2>You should drink <strong>{balance.toFixed(0)}</strong> ml more</h2>\n        <Form className=\"mt-4\">\n          <Form.Group controlId=\"target\">\n            <Form.Label>Target consumption per hour (ml)</Form.Label>\n            <Form.Control type=\"number\" value={target} onChange={changeTarget} />\n          </Form.Group>\n\n          <Form.Group controlId=\"portion\">\n            <Form.Label>Portion size (ml)</Form.Label>\n            <Form.Control type=\"number\" value={portion} onChange={changePortion} />\n          </Form.Group>\n        </Form>\n        <Button className=\"mt-4\" block size=\"lg\" variant=\"success\" onClick={drink}>Drink</Button>\n        <Button className=\"mt-2\" block size=\"lg\" variant=\"secondary\" onClick={reset}>Reset</Button>\n      </Jumbotron>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}